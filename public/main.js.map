{"version":3,"sources":["./src/app/login/guards/validate-token.guard.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {  CanActivate, CanLoad, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidateTokenGuard implements CanActivate, CanLoad {\r\n\r\n    constructor(private authService:AuthService, private router: Router){}\r\n\r\n  canActivate():Observable<boolean >| boolean   {\r\n    return this.authService.validateToken().pipe(\r\n        tap(valid => {\r\n\r\n            if(!valid){\r\n\r\n                this.router.navigateByUrl('/auth')\r\n            }\r\n        })\r\n    );\r\n  }\r\n  canLoad(): Observable<boolean >| boolean  {\r\n      return this.authService.validateToken().pipe(\r\n          tap(valid => {\r\n              if(!valid){\r\n\r\n                  this.router.navigateByUrl('/auth')\r\n              }\r\n          })\r\n      );\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  URLBASE:'http://localhost:8080/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'storeApp';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      AppRoutingModule,\r\n      BrowserAnimationsModule,\r\n      HttpClientModule,\r\n      ReactiveFormsModule,\r\n      \r\n    ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { resApiLogin } from '../store/interfaces/resApi/resApiLogin.interface';\r\nimport { User } from '../store/interfaces/user/user.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private _urlBase = environment.URLBASE;\r\n  private _user! : User;\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n\r\n  get user(){\r\n      if(localStorage.getItem('user')){\r\n          return JSON.parse(localStorage.getItem('user')!);\r\n      }else{\r\n          return {...this._user};\r\n      }\r\n  }\r\n\r\n  login(email:string, password:string){\r\n      const url: string = `${this._urlBase}/auth/login`;\r\n      return this.http.post<resApiLogin>(url,{email,password}).pipe(\r\n          tap( resp => {\r\n              if(resp.status === true){\r\n                  this._user = {\r\n                      email  :resp.user.email!,\r\n                      name   :resp.user.name!,\r\n                      rol    :resp.user.rol!,\r\n                      state  :resp.user.state!,\r\n                      uid    :resp.user.uid!\r\n                  }\r\n              }\r\n          }),\r\n          map( resp => {\r\n              localStorage.setItem('user', JSON.stringify(resp.user!) ),\r\n              localStorage.setItem('token', resp.token! );\r\n                  return resp.status\r\n\r\n          }),\r\n          catchError( err => of(err))\r\n    )\r\n\r\n  }\r\n\r\n\r\n  validateToken():Observable<boolean>{\r\n    const url: string = `${this._urlBase}/auth/renew`;\r\n    const headers = new HttpHeaders()\r\n        .set('x-token',localStorage.getItem('token') || '')\r\n    return this.http.get<resApiLogin>(url,{headers}).pipe(\r\n        map( resp => {\r\n\r\n            return resp.status\r\n        }),catchError( err =>of(false) )\r\n    )\r\n\r\n  }\r\n\r\n  validateTokenByRole(rol:string):boolean{\r\n    const user = JSON.parse(localStorage.getItem('user')!);\r\n    if(user.rol == rol){\r\n      return true\r\n    }else{\r\n      return false\r\n    }\r\n\r\n  }\r\n\r\n  logout(){\r\n      localStorage.clear();\r\n  }\r\n\r\n  register(){\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ValidateTokenGuard } from './login/guards/validate-token.guard';\r\n\r\nconst routes: Routes = [\r\n    { path:'store', loadChildren: () => import('./store/store.module').then( m => m.StoreModule ),\r\n      canActivate:[\r\n          ValidateTokenGuard\r\n      ],\r\n      canLoad:[\r\n          ValidateTokenGuard\r\n      ]\r\n    },\r\n    { path:'access', loadChildren: () => import('./login/login.module').then( m => m.LoginModule )},\r\n    { path: '**', redirectTo:'access'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}