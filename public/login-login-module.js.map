{"version":3,"sources":["./src/app/login/pages/login/login.component.ts","./src/app/login/pages/login/login.component.html","./src/app/login/login.module.ts","./src/app/login/login-routing.module.ts","./src/app/login/components/template-login/template-login.component.ts","./src/app/login/components/template-login/template-login.component.html"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport swal from'sweetalert2';\r\n\r\n@Component({\r\n\tselector: 'app-login',\r\n\ttemplateUrl: './login.component.html',\r\n\tstyles: [``],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\tconstructor(\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate router: Router,\r\n\t) {}\r\n\r\n\tloginForm!: FormGroup;\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.loginForm = this.fb.group({\r\n\t\t\temail: ['', [Validators.email, Validators.required]],\r\n\t\t\tpassword: [\r\n\t\t\t\t'',\r\n\t\t\t\t[Validators.required, Validators.minLength(6)],\r\n\t\t\t],\r\n\t\t});\r\n\t}\r\n\r\n\tlogin() {\r\n\t\tconst email = this.loginForm.controls['email'].value;\r\n\t\tconst password = this.loginForm.controls['password'].value;\r\n\t\tthis.authService.login(email, password).subscribe((resp) => {\r\n\t\t\tif (resp.hasOwnProperty('error')) {\r\n\t\t\t      swal.fire('Error',resp.error.msg,'error');\r\n                  setInterval(()=>{\r\n                      swal.close();\r\n                  },2000)\r\n\t\t\t} \r\n            if(resp ==true) {\r\n\t\t\t\t\r\n                swal.fire('Success','Welcome','success');\r\n                setInterval(()=>{\r\n                    swal.close();\r\n                },2000)\r\n\t\t\t\tthis.router.navigateByUrl('/store/home');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfieldIsValid(campo: string) {\r\n\t\treturn (\r\n\t\t\tthis.loginForm.controls[campo].errors &&\r\n\t\t\tthis.loginForm.controls[campo].touched\r\n\t\t);\r\n\t}\r\n}\r\n","<form  [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n\t<div class=\"mb-4\">\r\n\t\t<div class=\"row justify-content-lg-center\">\r\n\t\t\t<div class=\"col-sm-12 col-md-8\">\r\n\t\t\t\t<h1 class=\"display-3\">\r\n\t\t\t\t\tMyStore <small class=\"display-6 text-secondary\"> 1.0</small>\r\n\t\t\t\t</h1>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"mb-3 row justify-content-lg-center\">\r\n\t\t<label\r\n\t\t\tfor=\"staticEmail\"\r\n\t\t\tclass=\"col-sm-12 col-md-4 col-lg-2 col-form-label\"\r\n\t\t\t>Email</label\r\n\t\t>\r\n\t\t<div class=\"col-sm-12 col-md-8 col-lg-6\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"email\"\r\n\t\t\t\tclass=\"form-control\"\r\n\t\t\t\tid=\"staticEmail\"\r\n\t\t\t\tformControlName=\"email\"\r\n\t\t\t\trequired\r\n\t\t\t\tplaceholder=\"email@example.com\"\r\n\t\t\t/>\r\n\r\n\t\t\t<span\r\n\t\t\t\t*ngIf=\"fieldIsValid('email')\"\r\n\t\t\t\tclass=\"input-group alert alert-danger mb-2 mt-3\"\r\n\t\t\t>\r\n\t\t\t\tThe mail is required\r\n\t\t\t</span>\r\n\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"mb-3 row justify-content-lg-center\">\r\n\t\t<label\r\n\t\t\tfor=\"inputPassword\"\r\n\t\t\tclass=\"col-sm-12 col-md-4 col-lg-2 col-form-label\"\r\n\t\t\t>Password</label\r\n\t\t>\r\n\t\t<div class=\"col-sm-12 col-md-8 col-lg-6\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tformControlName=\"password\"\r\n\t\t\t\tclass=\"form-control\"\r\n\t\t\t\tid=\"inputPassword\"\r\n        autocomplete=\"false\"\r\n\t\t\t\trequired\r\n\t\t\t/>\r\n\r\n            <span\r\n            *ngIf=\"fieldIsValid('password')\"\r\n            class=\"input-group alert alert-danger mb-2 mt-3\"\r\n        >\r\n            The password is required, must have {{ 6- this.loginForm.controls['password'].value.length }} characters as a minimum\r\n        </span>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"mb-3 row justify-content-lg-center\">\r\n\t\t\r\n\t\t<div class=\"col-sm-12 col-md-8 col-lg-2\"></div>\r\n\t</div>\r\n\t<div class=\"mb-3 row mt-4\">\r\n\t\t<label class=\"col-sm-2 col-form-label\"></label>\r\n\t\t<div class=\"col-sm-10\">\r\n\t\t\t<div class=\"d-grid gap-2\">\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tclass=\"btn btn-warning btn-lg mx-sm-2\"\r\n\t\t\t\t\t[disabled]=\"loginForm.invalid\"\r\n\t\t\t\t>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { TemplateLoginComponent } from './components/template-login/template-login.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PrimengModule } from '../primeNg/primeng.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    TemplateLoginComponent,\r\n],\r\nimports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    ReactiveFormsModule,\r\n    PrimengModule\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TemplateLoginComponent } from './components/template-login/template-login.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path:'',\r\n        component:TemplateLoginComponent,\r\n        children:[\r\n            {path:'login',component:LoginComponent},\r\n            {path:'**',redirectTo:'login'}\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, ElementRef, OnInit, Renderer2, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-template-login',\r\n  templateUrl: './template-login.component.html',\r\n  styles: [\r\n      `\r\n        .rounded-container{\r\n          border-radius:20px\r\n      }\r\n      `\r\n  ]\r\n})\r\nexport class TemplateLoginComponent implements OnInit {\r\n\r\n    constructor(private renderer2:Renderer2){}\r\n\r\n  \r\n    ngAfterViewInit(): void {\r\n        this.change()\r\n    }\r\n\r\n\r\n  \r\n    @ViewChild('loginPage') loginPageContainer!: ElementRef;\r\n\r\n    ngOnInit(): void {\r\n  }\r\n\r\n\r\n  change():void{\r\n      const asLoginPageContainer  = this.loginPageContainer.nativeElement;\r\n      this.renderer2.setStyle(asLoginPageContainer,'background','#212529');\r\n      let heightWindow = document.documentElement.clientHeight.toString()+'px';\r\n      this.renderer2.setStyle(asLoginPageContainer,'height',heightWindow);\r\n      let widthWindow = document.documentElement.clientWidth.toString()+'px';\r\n      this.renderer2.setStyle(asLoginPageContainer,'width',widthWindow);\r\n}\r\n\r\n}\r\n","<div  #loginPage >\r\n    <div class=\"row justify-content-md-center justify-content-lg-center \">\r\n        <div class=\"col-sm-12 col-md-6 col-lg-6\">\r\n            <div class=\"container mt-5\">\r\n                <div class=\"bg-white p-5 rounded-container\">\r\n                    <router-outlet></router-outlet>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}